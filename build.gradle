buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
//        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
    }
}

version "2.0-SNAPSHOT"
group "au.org.ala"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply from: 'https://raw.githubusercontent.com/AtlasOfLivingAustralia/travis-build-configuration/master/travis_grails_publish.gradle'

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    // Grails 3.2.12
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    compile "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    // Grails 3.3.x
//    compile "org.springframework.boot:spring-boot-starter-logging"
//    compile "org.springframework.boot:spring-boot-autoconfigure"
//    compile "org.grails:grails-core"
//    compile "org.springframework.boot:spring-boot-starter-actuator"
//    compile "org.springframework.boot:spring-boot-starter-tomcat"
//    compile "org.grails:grails-web-boot"
//    compile "org.grails:grails-logging"
//    compile "org.grails:grails-plugin-rest"
//    compile "org.grails:grails-plugin-databinding"
//    compile "org.grails:grails-plugin-i18n"
//    compile "org.grails:grails-plugin-services"
//    compile "org.grails:grails-plugin-url-mappings"
//    compile "org.grails:grails-plugin-interceptors"
//    compile "org.grails.plugins:cache"
//    compile "org.grails.plugins:scaffolding"
//    compile "org.grails.plugins:async"
//    compile "org.grails.plugins:events"
//    compile "org.grails.plugins:gsp"
//    console "org.grails:grails-console"
//    profile "org.grails.profiles:web"
//    runtime "org.glassfish.web:el-impl:2.1.2-b03"
//    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
//    testCompile "org.grails:grails-gorm-testing-support"
//    testCompile "org.grails:grails-web-testing-support"
//    testCompile "org.grails.plugins:geb:1.1.2"
//    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:2.47.1"
//    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
//    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    compile 'org.grails.plugins:grails-java8'
    compile(group: 'org.grails.plugins', name: 'mongodb', version:"6.1.6") {
        artifact {
            name = 'mongodb'
            type = 'jar'
        }
        exclude group: 'org.grails', module: 'grails-datastore-gorm-grails2-support'
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    // override the mongodb driver version to fix a bug with BSON Codecs in the version depended on in mongodb 6.1.6
    compile 'org.mongodb:mongodb-driver:3.5.0'
    testCompile 'com.github.fakemongo:fongo:2.1.1'
    compile 'org.grails.plugins:external-config:1.1.2'
    compile 'xml-apis:xml-apis:1.4.01'

    compile 'au.org.ala:profile-service-client:1.0-SNAPSHOT'

    compile "org.grails.plugins:ala-map-plugin:3.0-SNAPSHOT"
    compile "org.grails.plugins:ala-auth:3.1.0"
    compile "org.grails.plugins:ala-ws-plugin:2.0"
    runtime "org.grails.plugins:ala-ws-security-plugin:2.0"
    runtime "org.grails.plugins:ala-bootstrap3:3.0.4"
    runtime "org.grails.plugins:ala-admin-plugin:2.1"

    compile 'org.webjars:jquery:2.2.4'
    compile 'org.webjars:jquery-migrate:1.4.1'
    compile 'org.webjars:knockout:3.4.2'
    compile 'org.webjars.bower:knockout-mapping:2.4.1'
    compile 'org.webjars:bootstrap:3.3.7-1'
    compile 'org.webjars:bootbox:4.4.0'
    compile 'org.webjars.bower:github-com-cjjava-jQuery-Validation-Engine:2.6.5'

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
    minifyJs = true
    minifyCss = true
    configOptions = [commonJs: false]
    excludes = [
            'libs/**/*',
            'webjars/**/*'
    ]
    includes = [
            'webjars/leaflet/0.7.7/dist/images/*'
    ]
}
